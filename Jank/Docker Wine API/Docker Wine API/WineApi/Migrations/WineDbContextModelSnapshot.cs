// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WineApi.Context;

#nullable disable

namespace WineApi.Migrations
{
    [DbContext(typeof(WineDbContext))]
    partial class WineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WineApi.Model.Additive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("AmountGrammsPer1000Litre")
                        .HasColumnType("real");

                    b.Property<float>("AmountGrammsPerHectoLitre")
                        .HasColumnType("real");

                    b.Property<float>("AmountGrammsPerLitre")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WineId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WineId");

                    b.ToTable("Additives");
                });

            modelBuilder.Entity("WineApi.Model.FermentationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Density")
                        .HasColumnType("real");

                    b.Property<int>("WineId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WineId");

                    b.ToTable("FermentationEntries");
                });

            modelBuilder.Entity("WineApi.Model.MostTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsTreated")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("TreatmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("MostTreatments");
                });

            modelBuilder.Entity("WineApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WineApi.Model.Wine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Container")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MostTreatmentId")
                        .HasColumnType("integer");

                    b.Property<float>("MostWeight")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<float>("VolumeInHectoLitre")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MostTreatmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Wines");
                });

            modelBuilder.Entity("WineApi.Model.Additive", b =>
                {
                    b.HasOne("WineApi.Model.Wine", "Wine")
                        .WithMany("Additives")
                        .HasForeignKey("WineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wine");
                });

            modelBuilder.Entity("WineApi.Model.FermentationEntry", b =>
                {
                    b.HasOne("WineApi.Model.Wine", "Wine")
                        .WithMany("FermentationEntries")
                        .HasForeignKey("WineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wine");
                });

            modelBuilder.Entity("WineApi.Model.Wine", b =>
                {
                    b.HasOne("WineApi.Model.MostTreatment", "MostTreatment")
                        .WithMany()
                        .HasForeignKey("MostTreatmentId");

                    b.HasOne("WineApi.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MostTreatment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WineApi.Model.Wine", b =>
                {
                    b.Navigation("Additives");

                    b.Navigation("FermentationEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
